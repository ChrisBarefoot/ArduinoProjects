#include <Adafruit_NeoPixel.h>
#include <avr/power.h>

#define PIN 6

Adafruit_NeoPixel strip = Adafruit_NeoPixel(256, PIN, NEO_GRB + NEO_KHZ800);

byte rs[] = {B00000000, B00000000, B00000000, B00000000, B00000000, B11100100, B11011011, B11001111, B11000100, B11000111, B10110001, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B11011101, B11111111, B11111111, B11111110, B11101111, B11100010, B11110111, B10101111, B10111100, B11000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00110110, B01010110, B01010111, B11000111, B11010000, B11011011, B00000000, B11010110, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00110001, B11111001, B01011110, B11101100, B11010111, B11011100, B11100101, B00000110, B11101111, B11000111, B10111000, B00000000, B00000000, B00000000, B00000000, B00000000, B00111011, B11110111, B01101000, B11100000, B11011011, B11011011, B11010111, B11111001, B00000000, B11101110, B11010100, B10111101, B00000000, B00000000, B00000000, B00000000, B00100100, B00111000, B11010110, B11011110, B11010100, B11001110, B11100001, B00000000, B00100100, B00100100, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B11000110, B11011101, B11010001, B11001011, B11000010, B11101011, B11011101, B11001100, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B11010100, B11011010, B00110111, B11010001, B11010011, B11110111, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B11011110, B11111111, B11111111, B00110011, B11111111, B11111101, B00100101, B11110010, B11011000, B11100001, B00000000, B00000000, B00000000, B00000000, B00000000, B11100101, B11111111, B11110101, B11111111, B00111001, B01001010, B01000001, B00110011, B11111111, B11111010, B11111111, B11010001, B00000000, B00000000, B00000000, B00000000, B10111110, B11001001, B11111111, B00100000, B11111111, B01001010, B01001000, B11111111, B00001111, B11111111, B11001000, B10111010, B00000000, B00000000, B00000000, B00000000, B11001011, B11011010, B11001100, B01000101, B01001011, B01010000, B01010001, B00111011, B00110101, B11010101, B11011001, B11000110, B00000000, B00000000, B00000000, B00000000, B11010000, B11010101, B00110111, B01100110, B01011011, B01001100, B01000100, B01010100, B01001101, B00100111, B11011001, B11001011, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00111110, B01010000, B00111111, B00000000, B00000000, B00101000, B00111110, B00110010, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B01000110, B01111011, B01110011, B01001000, B00000000, B00000000, B01010110, B01110110, B01101010, B00110010, B00000000, B00000000, B00000000, B00000000, B00000000, B01011111, B01101011, B01100011, B01011110, B01000111, B00000000, B00000000, B01010011, B01011110, B01011000, B01001100, B00011110, B00000000, B00000000};
byte gs[] = {B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00001100, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000010, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00110111, B01011000, B01010111, B11001101, B11010101, B11011100, B00000000, B11010001, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00011000, B11100111, B01000100, B11011010, B11000111, B11001001, B11010001, B00001010, B11011001, B10110000, B10100000, B00000000, B00000000, B00000000, B00000000, B00000000, B00100000, B11100101, B01001100, B11010000, B11000111, B11001000, B11000100, B11100010, B00000000, B11011000, B10111110, B10100110, B00000000, B00000000, B00000000, B00000000, B00001100, B00011110, B11000100, B11001011, B11000010, B10111100, B11001110, B00000000, B00100110, B00100111, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B10111101, B11001110, B11001010, B11000101, B10111010, B11010110, B11000101, B10110100, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00101010, B00000000, B00000000, B00000000, B00001011, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00110100, B00000000, B00000000, B00111011, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00100101, B00110111, B00110000, B00100001, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B11000011, B11101000, B00000000, B00100100, B11111111, B00011100, B00100100, B11111111, B00010100, B00000000, B11101100, B10111010, B00000000, B00000000, B00000000, B00000000, B10110110, B11001011, B11010011, B00011100, B00011101, B00101010, B00101100, B00010110, B00010110, B11011001, B11001001, B10110000, B00000000, B00000000, B00000000, B00000000, B10111011, B11000001, B00001011, B00111010, B00101110, B00100111, B00100000, B00101110, B00101000, B00000100, B11000110, B10110110, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00010001, B00101000, B00010111, B00000000, B00000000, B00000100, B00011110, B00010000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00101001, B01100011, B01011100, B00101110, B00000000, B00000000, B00111100, B01011110, B01010011, B00011001, B00000000, B00000000, B00000000, B00000000, B00000000, B01000101, B01010011, B01001100, B01000111, B00101110, B00000000, B00000000, B00111001, B01000111, B01000010, B00111010, B00001011, B00000000, B00000000};
byte bs[] = {};

void setup() {
  strip.begin();
  strip.setBrightness(80);
  strip.show(); // Initialize all pixels to 'off'
}

void loop() {
  showImage();
}

void setPixel(int i, byte r, byte g, byte b)
{
  int row = i / 16;
  if(row % 2 == 0)
  {
    strip.setPixelColor(i, r, g, b);
  }
  else
  {
    strip.setPixelColor( (((row+1)*16)-1) - (i - (row)*16), r, g, b);
  }
}

// Fill the dots one after the other with a color
void showImage()
{
  for(uint16_t i = 0; i < strip.numPixels(); i++)
  {
      setPixel(i, rs[i], gs[i], bs[i]);
  }
  strip.show();
}



